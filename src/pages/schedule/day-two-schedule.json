[
  {
    "time": "9:00am",
    "speaker": null,
    "talkTitle": "Check-in, coffee, light breakfast",
    "talkDescription": null,
    "photo": null,
    "speakerBio": null,
    "tableRowExpands": false
  },
  {
    "time": "10:00am",
    "speaker": "Brian Douglas, GitHub",
    "talkTitle": "Welcome",
    "talkDescription": "Welcome to this special edition of Reactathon!",
    "photo": "speaker-brian-douglas",
    "speakerBio": "Brian Douglas is a Developer Advocate at GitHub where he works on increasing use of the GitHub API by iterating on the onboarding process and helping users with evergreen technical content. In his spare time, he mentors new programmers towards contributing in open source as well as JavaScript and React tools.",
    "tableRowExpands": true
  },
  {
    "time": "10:05",
    "speaker": "Jen Luker, Formidable",
    "talkTitle": "A11Y & Accessibility",
    "talkDescription": "Accessibility in React has been a hot topic in the last few years, but in this talk, we'll be going beyond the basics. We'll explore a data-driven perspective to convince the business to invest in accessibility, then dive into the details of accessibility testing. We'll use lighthouse to audit applications, educate ourselves with the axe browser extensions, incorporate eslint-plugin-jsx-a11y into our lint process, and add axe-core to our automated testing suite. You'll leave prepared to add accessibility features to your application.",
    "photo": "speaker-jen-luker",
    "speakerBio": "Jen Luker is a Lead software engineer at Formidable, a BookBytes podcast co-host, and a member of the RxJS learning team. She has spent a majority of her decade-long career as a full-stack developer using PHP, Javascript, and CSS, but has a particular fondness for front end technologies. Jen trains others in ReactJS and accessibility, loves optimizing webpack builds, and codes apps in React Native. When she's not finding solutions, learning new technologies, or reading, her spare time is spent spinning yarn from raw wool and knitting; she's even been known to 3D print her own tools for the job. Jen is also fascinated by all things space, enjoys vintage cars, and is always looking for good conversation.",
    "tableRowExpands": true
  },
  {
    "time": "10:45",
    "speaker": "Ryan Burgess, Netflix",
    "talkTitle": "Testing into a Better User Experience",
    "talkDescription": "We are all talented designers and engineers that strive to create the best user experience. Unfortunately, we don’t always know what the best user experience is until a new feature is in production and used by our customers. That’s where the power of A/B testing comes into play! At Netflix, we are constantly running A/B tests to improve our user experience. Find out how to handle A/B testing at scale,  what it takes to build the optimal test, and how to start implementing A/B tests within your company.",
    "photo": "speaker-ryan",
    "speakerBio": "Ryan is a Software Engineering Manager at Netflix. He leads a team of cross-platform UI Engineers that build the signup flow for Netflix on iOS, Android, Website, and TV. He's also the Canadian voice on the Front End Happy Hour podcast.",
    "tableRowExpands": true
  },
  {
    "time": "11:10",
    "speaker": null,
    "talkTitle": "Break",
    "talkDescription": null,
    "photo": null,
    "speakerBio": null,
    "tableRowExpands": false
  },
  {
    "time": "11:30",
    "speaker": "Amjad Masad, Repl.it",
    "talkTitle": "Repl.it plugins in React & Redux",
    "talkDescription": "Building an extensible web IDE in React presents a unique set of challenges around sandboxing. In this talk, we’ll explore the unique challenges we faced, lessons learned, and how you can apply them to the unique challenges at your company.",
    "photo": "speaker-amjad-masad",
    "speakerBio": "Amjad is the CEO and founder of Repl.it, which makes programming more accessible by building tools, platforms, and infrastructure for programmers, aspiring programmers, teachers, and students. Before that he was a tech lead on the JavaScript infrastructure team at Facebook, which he helped to start. This team built and maintained open source tools that made JavaScript development easier, accessible, and generally better. The team built and/or maintained things like the Babeljs compiler, Jest, and the React Native packager. Before that he was the #1 employee at Codecademy. He did some tech-leading, built product, and also built infrastructure. Before that he was briefly at Yahoo.",
    "tableRowExpands": true
  },
  {
    "time": "11:55",
    "speaker": "Jeremias Menichelli, Typeform",
    "talkTitle": "A sleek view transition recipe for web apps",
    "talkDescription": "Have you ever wondered why good performance around animated transitions on views is so hard to achieve in web projects? Animations and performance are one of the top point of discussion when comparing web application to their native counterparts. I’m going to share my learnings on how to safely kick off route based animations, performance tricks and modern workflows to build reliable transitions for web applications.",
    "photo": "speaker-jeremias",
    "speakerBio": "Jeremias is a experienced front-end engineer. He helped build all type of projects, from rich animated web experiences to Node applications. He's currently working in design systems at Typeform and he's a member of webpack's documentation team.",
    "tableRowExpands": true
  },
  {
    "time": "12:20pm",
    "speaker": null,
    "talkTitle": "Lunch",
    "talkDescription": null,
    "photo": null,
    "speakerBio": null,
    "tableRowExpands": false
  },
  {
    "time": "1:30",
    "speaker": "James McNamara, Chosen.fyi",
    "talkTitle": "Functional Lenses with Shades.js",
    "talkDescription": "One frustrating thing for many people coming to functional programming is the clunkiness of updating a single field in an object. What used to be `user.likes += 1` becomes `const user2 = {...user, likes: user.likes + 1}`. This syntactic overhead may be fine for this example, but as your objects becomes more complex, these updates become more and more verbose. The solution to this is lenses. Lenses are a functional construct which allow you to update immutable object as easily as `mod('likes')(likes => likes + 1)(user)` (This pattern may be familiar to users of Immutable's `setIn` or `updateIn` functions). However what makes lenses interesting is not when they act like object references, but when they allow us to do things that normal object mutation does not support: updating many elements of a collection at once, or only objects that fit a criterion. Shades.js provides lens functions for native JS objects, and provides a rich library of utility functions that make transforming and updating data declarative. Time permitting, we can discuss how these patterns can fit into a Redux architecture.",
    "photo": "speaker-james",
    "speakerBio": "James McNamara is a functional web developer and co-founder of chosen.fyi, a Boston based talent network.",
    "tableRowExpands": true
  },
  {
    "time": "2:10",
    "speaker": "Lauren Tan, Netflix",
    "talkTitle": "Swipe Left, Uncaught TypeError: Learning to Love Type Systems",
    "talkDescription": "Sometimes, undefined is not a function. As mortal programmers, we ship bugs to production everyday. Bugs slow us down, frustrate our users, and cause us to have crises of confidence. Don't go alone–type systems in TypeScript, Flow, and GraphQL can improve your confidence and help you ship less bugs. We'll start with why: a practical look at what you'll get from embracing types. Then, a gentle introduction to the ideas behind them. Finally, we'll explore the possibilities of a type system over the network.",
    "photo": "speaker-lauren-tan",
    "speakerBio": "Lauren is a software engineering manager at Netflix.",
    "tableRowExpands": true
  },
  {
    "time": "2:40",
    "speaker": null,
    "talkTitle": "Break",
    "talkDescription": null,
    "photo": null,
    "speakerBio": null,
    "tableRowExpands": false
  },
  {
    "time": "3:00",
    "speaker": "Brian Holt, Microsoft",
    "talkTitle": "10k or Bust: The Delicate Power of Webpack and Babel",
    "talkDescription": "Your app is bigger and slower than it needs to be. Without rewriting app code we can squeeze more performance out of your code by tweaking Webpack and Babel. These tools are immensely powerful but it’s a delicate dance to get them to play nice. This talk is full of tips and tricks to get you there. After three years of tooling around with Webpack and Babel at Netflix, LinkedIn, and Reddit Brian got some battle-won knowledge that he’d like to share with you all. Some non-intuitive tricks that lead to smaller bundles, faster parse times, browser-engine opts and de-opts, and faster perceived load times. While these examples will use react to make examples this apply to any application that uses these two phenomenal tools. You’ll be surprised at what you can do just turning a few knobs.",
    "photo": "speaker-brian-holt",
    "speakerBio": "Brian Holt is a senior cloud developer advocate at Microsoft, where he’s all about developers, developers, developers. Previously, he was a JavaScript engineer at Netflix, LinkedIn, and Reddit. When not working, Brian finds time to teach on Frontend Masters, run his mouth on Front End Happy Hour, travel all over the world, and play with his adorable dog.",
    "tableRowExpands": true
  },
  {
    "time": "3:40",
    "speaker": "Desmond Brand, Flexport",
    "talkTitle": "Scaling a Web App with Code Splitting",
    "talkDescription": "Code splitting ",
    "photo": "speaker-desmond-brand",
    "speakerBio": "Desmond is the Director of Engineering at Flexport. Previously, he was part of the excellent Khan Academy team. Prior to moving to the Bay Area, he worked at Bing in Bellevue WA. He grew up in Melbourne, Australia, where he went to Swinburne University and earned degrees in Robotics Engineering and Computer Science.",
    "tableRowExpands": true
  },
  {
    "time": "4:00",
    "speaker": null,
    "talkTitle": "Break",
    "talkDescription": null,
    "photo": null,
    "speakerBio": null,
    "tableRowExpands": false
  },
  {
    "time": "4:20",
    "speaker": "Eve Porcello, Moon Highway",
    "talkTitle": "⚡ GraphQL in 3 Components",
    "talkDescription": "Three components: that’s all you need to know to start building React applications with GraphQL. In this talk, we'll take a closer look at how to incorporate Apollo's Query, Mutation, and Subscription components to handle all of your React app's data fetching needs. And with that, you'll be hooked on GraphQL.",
    "photo": "speaker-eve",
    "speakerBio": "Eve Porcello is the co-owner of Moon Highway, a training and curriculum development company based in Northern California. She is an active corporate trainer, creates courses for LinkedIn Learning, and is the co-author of O'Reilly's Learning GraphQL and Learning React.",
    "tableRowExpands": true
  },
  {
    "time": "4:30",
    "speaker": "Laurie Voss, NPM",
    "talkTitle": "10 Things You Didn't Know about NPM",
    "talkDescription": "Fifty percent of npm users started using it less than a year ago, so if you’re only scratching the surface of npm’s features, you’re not alone. Laurie Voss gives a guided tour of npm’s greatest features, old and new, and explains how they can be integrated into your workflow to make you better, happier, and more productive.",
    "photo": "speaker-laurie-voss",
    "speakerBio": "Laurie Voss is a veteran web developer and CTO of NPM, Inc.",
    "tableRowExpands": true
  },
  {
    "time": "4:50",
    "speaker": "Brian LeRoux, Begin.com",
    "talkTitle": "VanillaJS: Capabilities & Trajectory",
    "talkDescription": "React and similar libraries are tools that solved specific problems to address the limitations of vanilla JavaScript and the web browsers where it runs. But are they still needed today? In this talk, we will explore how far vanilla JS has come, what it can and should be used for, and where its limitations may require a library such as React.",
    "photo": "speaker-brian-leroux",
    "speakerBio": "Brian is a former member of the Adobe PhoneGap team and helped to foster the Apache Cordova project. He is also responsible for wtfjs. Lately he has been building on the cloud with begin.com and hacking on Architect (https://arc.codes), a plaintext manifest for defining next generation cloud infrastructure, and a project of the JavaScript Foundation.",
    "tableRowExpands": true
  },
  {
    "time": "5:20",
    "speaker": "Brian Douglas, GitHub",
    "talkTitle": "Thanks and goodbye",
    "talkDescription": "Thanks for joining us at Reacathon 2.5! We hope to see you again in March 2019!",
    "photo": "speaker-brian-douglas",
    "speakerBio": "Brian Douglas is a Developer Advocate at GitHub where he works on increasing use of the GitHub API by iterating on the onboarding process and helping users with evergreen technical content. In his spare time, he mentors new programmers towards contributing in open source as well as JavaScript and React tools.",
    "tableRowExpands": true
  },
  {
    "time": "5:20 - 7:00",
    "speaker": "Afterparty",
    "talkTitle": "GitHub Bar & Lounge",
    "talkDescription": "After a long day of content, stay and join us for refreshments, beer, and pizza! Discuss the day's talks, mingle with attendees and speakers, and have a good time!",
    "photo": null,
    "speakerBio": null,
    "tableRowExpands": true
  }
]
